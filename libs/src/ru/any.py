from libs.classes import CommandParser as p
from libs.classes import Commands as c
from libs.system import regex as r
from libs.system import restrict_commands
from aiogram.utils.markdown import hlink as l


class commands:

    class _help_text:
        users = f'üë• –£–ø–æ–º–∏–Ω–∞–Ω–∏—è (@username,{l("–í–∞—Å—è –ü—É–ø–∫–∏–Ω","t.me/username")} –∏–ª–∏ –æ—Ç–≤–µ—Ç)'
        until = '‚è≥ –î–∞—Ç–∞[s|m|h|d|M|y] (1m 30s –∏–ª–∏ 1M)'
        reason = '‚ùî "–ü—Ä–∏—á–∏–Ω–∞" (–î–∞ –ø—Ä—è–º –≤ –∫–∞–≤—ã—á–∫–∞—Ö)'
        poll = 'üìà –°–¥–µ–ª–∞—Ç—å –æ–ø—Ä–æ—Å (-p --poll)'

        ban = [users, until, reason, poll]
        unban = [users, reason, poll]
        kick = [users, reason, poll]
        mute = [users, until, reason, poll]
        unmute = [users, reason, poll]

        count = "üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (2 - 1000)"
        reply = "‚§¥ –û—Ç–≤–µ—Ç—å—Ç–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã—à–µ"

        purge = [count, reply]

    hide = c.Hide().add(
        c.Command("cancel", "‚óÄÔ∏è –î–ª—è –≤—ã—Ö–æ–¥–∞",
                  "–í—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ñ–æ—Ä–º—ã")
    )

    default_commands = c.Default().add(
        c.Command("fix", "üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥",
                  "–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥"),
        c.Command("help", "üöë –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–∞–º",
                  "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É (/help –∏–ª–∏ /help ban)")
    )

    private_commands = c.Private().add(
        c.Command("settings", "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    )

    chat_commands = c.AllChat().add(

    )

    chat_admin_commands = c.AllAdmins().add(
        c.Command("ban", "‚õî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", *_help_text.ban),
        c.Command("unban", "‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", *_help_text.unban),
        c.Command("kick", "‚ö† –ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", *_help_text.kick),
        c.Command("mute", "üîá –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", *_help_text.mute),
        c.Command("unmute", "üîà –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", *_help_text.unmute),
        c.Command("purge", "üóë –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è", *_help_text.purge),
    )


class parsers:

    help = p.Command("help", "–ö–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–∫–∏").add(
        p.TextArg("–ö–æ–º–∞–Ω–¥–∞", "cmd", sep="")
    )

    restrict = p.Command(restrict_commands, "–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞").add(
        p.Arg(r.parse.reason, "reason", "–ü—Ä–∏—á–∏–Ω–∞", False),
        p.DateArg("–°—Ä–æ–∫"),
        p.UserArg("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
        p.FlagArg().add(
            p.Flag("p", "poll", "poll", "–§–ª–∞–≥ –æ–ø—Ä–æ—Å–∞")
        )
    )

    purge = p.Command("purge", "–ö–æ–º–∞–Ω–¥–∞ –æ—á–∏—â–µ–Ω–∏—è").add(
        p.NumberArg(2, 1000, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π", required=True)
    )

    test = p.Command("test", "–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥–∞").add(
        p.NumberArg(2, 10, "–ß–∏—Å–ª–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", required=False)
    )


class poll:
    pass


command_list = c.Commands("ru").add(
    commands.hide,
    commands.default_commands,
    commands.private_commands,
    commands.chat_commands,
    commands.chat_admin_commands
)
